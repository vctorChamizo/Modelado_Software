package Presentacion.Vistas.Ventas;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

import Presentacion.Contexto.Contexto;
import Presentacion.Controlador.Controlador;
import Presentacion.Vistas.VistaPrincipal.MainGUI;
import Presentacion.Vistas.VistaPrincipal.RenderCelda;
import Presentacion.Vistas.VistaPrincipal.Settings_General;


public class ListaFrame_Ventas extends JPanel {
	

	private static final long serialVersionUID = 7859309329398096006L;

	String idModule = "Venta";
	
	JTable table;
	
	int filas;
	
	/**
	 * Constructor
	 * 
	 * @param filas
	 */
	public ListaFrame_Ventas(int filas){

		this.filas = filas;
		
		initGUI();
		
	}//MarcasGUI
	
	
	/**
	 * Anade todos los componentes Swing necesarios para poder visualizar el frame para ver la lista de ventas.
	 */
	private void initGUI() {
		
		//THIS --> PANEL CENTRO.
		
		this.setLayout(new BorderLayout());	
		
	
		//***********************************************************************************************************************

		
			JPanel informationPanel = new JPanel(new BorderLayout());
				informationPanel.setPreferredSize(new Dimension(700,300));
				informationPanel.setBorder(BorderFactory.createMatteBorder(10, 7, 1, 1, MainGUI.getBackgroundColor()));

				
				table = createTableVentas(this.filas);
		
				JScrollPane table_barra = new JScrollPane(table, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
				
				
			informationPanel.add(table_barra, BorderLayout.CENTER);
			
			
		//ALOJADA LA TABLA DE INFORMAION
			
		this.add(informationPanel, BorderLayout.CENTER);
		
		
		//***********************************************************************************************************************

		
			//PANEL DONDE VAN ALOJADOS LOS BOTONES DE ACCION.
			
			JPanel setting;
			
			setting = new Settings_General(
					
					//ID
					idModule,
					
					
					//REMOVE
					new ActionListener() {
				
						public void actionPerformed(ActionEvent e) {
							
							if (table.getSelectedRow() == -1)
								
								MainGUI.notSelectedRow();
							
							else {
					
								int n = JOptionPane.showOptionDialog(new JFrame(), "¿Estas seguro de eliminar esta venta?", "Eliminar Venta",
										
										JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
								
						
								if(n == 0){
									
									Controlador.getInstancia().tratarPeticion(new Contexto("removeVenta", table.getValueAt(table.getSelectedRow(), 0)));
								}
						
									
							}//else
						}//actionPerformed
					},
					
					
					//ADD
					null,
					
					
					//UPDATE
					null,
					
					
					//ACTIVATE
					new ActionListener(){
						
						@Override
						public void actionPerformed(ActionEvent arg0) {
							
							if (table.getSelectedRow() == -1)
								
								MainGUI.notSelectedRow();
							
							else {
								
								int n = JOptionPane.showOptionDialog(new JFrame(), "ï¿½Estas seguro de activar esta venta?", "Activar Venta",
										
										JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
								
						
								if(n == 0){
									
									Controlador.getInstancia().tratarPeticion(new Contexto("activateVenta", table.getValueAt(table.getSelectedRow(), 0)));
								}
								
								
							}//else
						}//actionPerformed
					}
				);
			
		
		//***********************************************************************************************************************

		
		this.add(setting, BorderLayout.NORTH);
		
	}//initGUI
	
	
	//*****************************************************************************************************
	
	
	public void updateTable(ArrayList<VentasTrans>lista){
		
		for(int j = 0;j < lista.size(); j++){
		
			this.table.setValueAt(lista.get(j).getId(), j, 0);
			this.table.setValueAt(lista.get(j).getFecha(), j, 1);
			this.table.setValueAt(lista.get(j).getCliente(), j, 2);
			
			String productos = "";
			
			for (int i = 0; i < lista.get(j).getNumeroDeProductos(); i++){
				
				productos += lista.get(j).getIdProducto(i);
				productos += "(" + lista.get(j).getCantidadProducto(i) + ")";
				
				
				if(i < lista.get(j).getNumeroDeProductos()-1)
					productos+= ", ";
				
			}
			
			this.table.setValueAt(productos, j, 3);
			this.table.setValueAt(lista.get(j).getPrecioVenta(), j, 4);
			this.table.setValueAt(lista.get(j).getActivado(), j, 5);
		
		}//for
		
		this.repaint();
		
		this.setVisible(true); 
		
	}//updateTable
	
	
	//*****************************************************************************************************

	
	private JTable createTableVentas(int f){
		
		//PROVISIONAL
		
		String[]nombreColumnas={"ID","Fecha","ID_Cliente", "Productos", "Importe Total", "Activo"};
		
		TableModel tableModel = new TableModel(f, nombreColumnas, idModule);
		
		
		JTable aux = new JTable(tableModel);
		
			JTableHeader th; 
				th = aux.getTableHeader();
				th.setFont(new Font("Atial", Font.BOLD, 15));
				th.setForeground(MainGUI.getBackgroundColor());
	
			
			TableCellRenderer renderer = new RenderCelda(idModule);
		
			aux.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
			
		    aux.setDefaultRenderer(Object.class, renderer);
	
		    aux.setRowHeight(30);
	    
		    aux.getColumnModel().getColumn(0).setPreferredWidth(50);
		
		    aux.getColumnModel().getColumn(1).setPreferredWidth(100);
		
		    aux.getColumnModel().getColumn(2).setPreferredWidth(20);
		    
		    aux.getColumnModel().getColumn(3).setPreferredWidth(200);
		    
		    aux.getColumnModel().getColumn(4).setPreferredWidth(20);
		    
		    aux.getColumnModel().getColumn(4).setPreferredWidth(20);


		return aux;
			
	}//createTableVentas
	


}//ListaFrame_Ventas
