package Integracion.Cliente;

import java.sql.*;
import java.util.ArrayList;

import Integracion.Transacciones.GestorTransacciones;
import Negocio.Cliente.ClienteTrans;
import Negocio.Cliente.EmpresaTrans;
import Negocio.Cliente.ParticularTrans;


public class ClienteDaoImp implements ClienteDao{

@Override
public ArrayList<ClienteTrans> listarClientes(){
	
	ClienteTrans cliente = null;
	ArrayList<ClienteTrans> read = new ArrayList<ClienteTrans>();
	PreparedStatement ps;
	
	try {
		
		
		Connection conexion = (Connection)GestorTransacciones.getInstancia().getTransaccion().getResource();
		ps = conexion.prepareStatement("SELECT * FROM cliente ORDER BY id FOR UPDATE");
		 
		ResultSet rs = ps.executeQuery();
		
		while (rs.next()){
			
			cliente = new ParticularTrans(rs.getInt("id"), rs.getString("nombre"),

									rs.getString("telefono"), rs.getString("email"),
					
									rs.getString("DNI"), rs.getBoolean("activo"), rs.getNString("apellido"));
			
			read.add(cliente);
		}
		
		ps.close();
		
		
	}catch(SQLException e) {
		
		System.err.println("Error al listar los clientes");
	} 
	
	return read;	
}

@Override
public ArrayList<EmpresaTrans> listarEmpresas(){
	
	EmpresaTrans empresa = null;
	ArrayList<EmpresaTrans> read = new ArrayList<EmpresaTrans>();
	PreparedStatement ps;
	
	try {
		
		
		Connection conexion = (Connection)GestorTransacciones.getInstancia().getTransaccion().getResource();
		ps = conexion.prepareStatement("SELECT * FROM cliente ORDER BY id FOR UPDATE");
		 
		ResultSet rs = ps.executeQuery();
		
		while (rs.next()){
			
			empresa = new EmpresaTrans(rs.getInt("id"), rs.getString("nombre"),

									rs.getString("telefono"), rs.getString("email"),
					
									rs.getString("DNI"), rs.getBoolean("activo"), rs.getString("sector"));
			
			read.add(empresa);
		}
		
		ps.close();
		
		
	}catch(SQLException e) {
		
		System.err.println("Error al listar las empresas");
	} 
	
	return read;	
}

@Override
public ClienteTrans buscarCliente(int id){
	ClienteTrans cliente = null;
	PreparedStatement ps;
	
	try {
		
		Connection conexion = (Connection)GestorTransacciones.getInstancia().getTransaccion().getResource();
		ps = conexion.prepareStatement("SELECT * FROM cliente WHERE id = ? FOR UPDATE");
		
		ps.setInt(1, id);
		ResultSet rs = ps.executeQuery();
		
		if(rs.next()){
			
			cliente = new ParticularTrans(rs.getInt("id"), rs.getString("nombre"),

					rs.getString("telefono"), rs.getString("email"),
	
					rs.getString("DNI"), rs.getBoolean("activo"), rs.getNString("apellido"));
		}
		
		ps.close();
		
	}catch(SQLException e) {
		System.err.println("Error al buscar el cliente");
		
	}
	
	return cliente;	
}
	
}

