package Negocio.Venta;

import java.util.ArrayList;

import Integracion.Excepciones.ExcepcionIntegracion;
import Integracion.FactoriaIntegracion.FactoriaIntegracion;
import Integracion.FactoriaQuery.FactoriaQuery;
import Integracion.Producto.ProductoDao;
import Integracion.Querys.Query;
import Integracion.Venta.VentaDao;
import Integracion.Transacciones.GestorTransacciones;
import Integracion.Transacciones.Transaccion;
import Negocio.Excepciones.ExcepcionNegocio;
import Negocio.Producto.ProductoTrans;

public class VentaSaImp implements VentaSa {


	public void EliminarVenta(int id) throws ExcepcionNegocio {//dev prod
		
		try {
			
			
		VentaDao ventaDao = FactoriaIntegracion.getInstancia().crearVentaDao();
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		VentaTrans transferVenta = ventaDao.buscarVentaPorId(id);
		
		if(transferVenta != null) {
			
			ArrayList<LineaVenta> productos = transferVenta.getProductos();
			ProductoDao prodDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			ProductoTrans prodCarrito = null;
			LineaVenta lineaActual = null;

			for(int i =0; i < productos.size(); i++) {
				
				lineaActual = productos.get(i);
				prodCarrito = prodDao.buscarPorId(lineaActual.getIdProd());
				
				if(prodCarrito != null) {
					
					prodCarrito.setPrecio(prodCarrito.getPrecio() + lineaActual.getPrecio()); 
					//prodDao.modificarProducto(prodCarrito);
				}
				else {
					
					transaccion.rollback();
					GestorTransacciones.getInstancia().eliminaTransaccion();
					throw new ExcepcionNegocio("No se ha podido eliminar la venta");
					
				}
				
			}
			
			ventaDao.borrarVenta(573);
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			
		}else {
			
			transaccion.rollback();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("La venta no existe");
			
		}
		
		
		}catch(ExcepcionIntegracion e) {
			throw new ExcepcionNegocio(e.getMessage());
		}
		
	}//EliminarVenta
	
	
	public ArrayList<VentaTrans> ListarVenta() throws ExcepcionNegocio{
		
		ArrayList<VentaTrans> listaV;
		
			try {
				
				VentaDao ventaDao = FactoriaIntegracion.getInstancia().crearVentaDao();
				Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
				
				transaccion.start();
				
				listaV = ventaDao.listarVentas();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				
				if(listaV == null) {
					
					throw new ExcepcionNegocio("Error al listar las ventas");
				}
				
				
			}	catch (ExcepcionIntegracion e) {
				
				throw new ExcepcionNegocio(e.getMessage());
			}
		
		
		return listaV;
	}//ListarVentas


	@Override
	public int CrearVenta(VentaTrans venta) throws ExcepcionNegocio {
		
		int id;
		
		try {
			
			VentaDao ventaDao = FactoriaIntegracion.getInstancia().crearVentaDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			transaccion.start();
			VentaTrans exist = ventaDao.buscarVentaPorId(venta.getId());
			
			if(exist == null) { //COMPLETAR VENTA
				
				id=ventaDao.crearVenta(venta);
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				
				
			}else {
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				throw new ExcepcionNegocio("La venta " + venta.getId() + "ya existe.");
				
			}
			
			
		}catch(ExcepcionIntegracion e) {
			
			System.out.println(e);
			throw new ExcepcionNegocio(e.getMessage());
			
		}
		
		return id;
		
	}//Crear venta


	@Override
	public ArrayList<VentaTrans> ClientesProductosEnFechaDeterminada(String fecha) throws ExcepcionIntegracion {
		

			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			transaccion.start();
			
			Query query = FactoriaQuery.getInstancia().nuevaQuery("ClientesProductosEnFechaDeterminada");
			ArrayList<VentaTrans> ventas = (ArrayList<VentaTrans>)query.ejecutar(fecha);
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			
			return ventas;
			
	}

	
	



} //VentasSAImp
