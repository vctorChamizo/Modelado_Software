package Negocio.Producto;


import java.util.ArrayList;

import Integracion.FactoriaIntegracion.FactoriaIntegracion;
import Integracion.Producto.ProductoDao;
import Integracion.Transacciones.GestorTransacciones;
import Integracion.Transacciones.Transaccion;
import Negocio.Excepciones.ExcepcionNegocio;


public class ProductoSaImp implements ProductoSa {

	public void crearProducto(ProductoTrans producto) throws ExcepcionNegocio{
		
		ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
		
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		if(productoDao.buscarProductoPorNombre(producto.getNombre()).size() == 0) {
			productoDao.crearProducto(producto);
		}
		else {
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("El producto '" + producto.getNombre() + "' ya existe.");
		}
		
		transaccion.commit();
		GestorTransacciones.getInstancia().eliminaTransaccion();
	}

	//************************************************************************************************************
	
	public void modificarProducto(ProductoTrans producto) throws ExcepcionNegocio {
		
		ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
		
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		if(productoDao.buscarPorId(producto.getId()) != null)
			productoDao.modificarProducto(producto);
		
		else {
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("El producto '" + producto.getNombre() + "' no se puede modificar.");
		}
		
		transaccion.commit();
		GestorTransacciones.getInstancia().eliminaTransaccion();
	}

	//************************************************************************************************************

	public void borrarProducto(int id) throws ExcepcionNegocio {

		ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		if(productoDao.buscarPorId(id) != null)
			productoDao.borrarProducto(id);
		
		else{
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("No existe el producto.");
		}
		
		transaccion.commit();
		GestorTransacciones.getInstancia().eliminaTransaccion();
	}
	
	
	//************************************************************************************************************
	
		@Override
		public void activarProducto(int id) throws ExcepcionNegocio {

			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			if(productoDao.buscarPorId(id) != null)
				productoDao.activarProducto(id);
			
			else {
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				throw new ExcepcionNegocio("No existe el producto.");
			}
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
		}

	
	//************************************************************************************************************
	

	@Override
	public ArrayList<ProductoTrans> buscarProducto(String datos) throws ExcepcionNegocio {
		
		ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		ArrayList<ProductoTrans> lista = productoDao.buscarProductoPorNombre(datos);
		
		transaccion.commit();
		GestorTransacciones.getInstancia().eliminaTransaccion();
		
		if(lista == null) {
			
			//transaccion.commit();
			//GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("Error al buscar producto.");
		}
		else if (lista.size() == 0) {
			
			throw new ExcepcionNegocio("No se han encontrado coincidencias con: " + datos);
		}
		
		//transaccion.commit();
		//GestorTransacciones.getInstancia().eliminaTransaccion();
		
		return lista;
	}
	
	
	//************************************************************************************************************
	

	@Override
	public ArrayList<ProductoTrans> listarProductos() throws ExcepcionNegocio {
		
		ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
		Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
		
		transaccion.start();
		
		ArrayList<ProductoTrans> lista = productoDao.listarProducto();
		
		transaccion.commit();
		GestorTransacciones.getInstancia().eliminaTransaccion();
		
		if(lista == null){
			
			//transaccion.commit();
			//GestorTransacciones.getInstancia().eliminaTransaccion();
			throw new ExcepcionNegocio("Error al listar los productos.");
		}
		
		//transaccion.commit();
		//GestorTransacciones.getInstancia().eliminaTransaccion();
		
		return lista;
		
	}


	

}


