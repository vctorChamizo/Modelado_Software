package Negocio.Producto;


import java.util.ArrayList;

import Integracion.Excepciones.ExcepcionIntegracion;
import Integracion.FactoriaIntegracion.FactoriaIntegracion;
import Integracion.Producto.ProductoDao;
import Integracion.Transacciones.GestorTransacciones;
import Integracion.Transacciones.Transaccion;
import Negocio.Excepciones.ExcepcionNegocio;


public class ProductoSaImp implements ProductoSa {

	public void crearProducto(ProductoTrans producto) throws ExcepcionNegocio{
		
		try {
			
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			transaccion.start();
			
			ProductoTrans existe = productoDao.buscarProductoPorNombre(producto.getNombre());
			
			if (existe == null)
					productoDao.crearProducto(producto);
			
			else {
				
				if(!existe.getActivo())
					productoDao.activarProducto(producto.getId());
				
				else {
					transaccion.commit();
					GestorTransacciones.getInstancia().eliminaTransaccion();
					throw new ExcepcionNegocio("El producto '" + producto.getNombre() + "' ya existe.");
				}
			}
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
	}//crearProducto

	//************************************************************************************************************
	
	public void modificarProducto(ProductoTrans producto) throws ExcepcionNegocio{
		
		try {
			
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			if(productoDao.buscarPorId(producto.getId()) != null)
				productoDao.modificarProducto(producto);
			
			else {
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				throw new ExcepcionNegocio("El producto '" + producto.getNombre() + "' no se puede modificar.");
			}
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
	}//modificarProducto

	//************************************************************************************************************

	public void borrarProducto(int id) throws ExcepcionNegocio{

		try {
		
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			if(productoDao.buscarPorId(id) != null)
				productoDao.borrarProducto(id);
			
			else{
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				throw new ExcepcionNegocio("No existe el producto.");
			}
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
	
	}//borrarProducto
	
	
	//************************************************************************************************************
	
	@Override
	public void activarProducto(int id) throws ExcepcionNegocio{

		try {
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			if(productoDao.buscarPorId(id) != null)
				productoDao.activarProducto(id);
			
			else {
				transaccion.commit();
				GestorTransacciones.getInstancia().eliminaTransaccion();
				throw new ExcepcionNegocio("No existe el producto.");
			}
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
	}//activarProducto

	
	//************************************************************************************************************
	

	@Override
	public ProductoTrans buscarProductoPorNombre(String nombre) throws ExcepcionNegocio{
		
		ProductoTrans producto;
		
		try {
			
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			producto = productoDao.buscarProductoPorNombre(nombre);
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			
			if(producto == null) {
	
				throw new ExcepcionNegocio("No se han encontrado coincidencias con: " + nombre);
			}
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
		return producto;
		
	}//buscarProducto

	
	//************************************************************************************************************

	
	@Override
	public ProductoTrans buscarProductoPorId(int id) throws ExcepcionNegocio {

		ProductoTrans producto;
		
		try {
			
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			producto = productoDao.buscarPorId(id);
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			
			if(producto == null) {
	
				throw new ExcepcionNegocio("El producto no exisite");
			}
		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
		return producto;
		
	}
	
	
	
	//************************************************************************************************************
	

	@Override
	public ArrayList<ProductoTrans> listarProductos() throws ExcepcionNegocio{
		
		ArrayList<ProductoTrans> lista;
		
		try {
			
			ProductoDao productoDao = FactoriaIntegracion.getInstancia().crearProductoDao();
			Transaccion transaccion = GestorTransacciones.getInstancia().nuevaTransaccion();
			
			transaccion.start();
			
			lista = productoDao.listarProducto();
			
			transaccion.commit();
			GestorTransacciones.getInstancia().eliminaTransaccion();
			
			if(lista == null)
				throw new ExcepcionNegocio("Error al listar los productos.");

		}
		
		catch (ExcepcionIntegracion e) {
			
			throw new ExcepcionNegocio(e.getMessage());
		}
		
		return lista;
		
	}//listarProductos


}//ProductoSaImp


