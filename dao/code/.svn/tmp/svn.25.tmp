/**
 * 
 */
package Integracion.Venta;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import Integracion.Transacciones.GestorTransacciones;
import Integracion.Transacciones.Transaccion;
import Negocio.Venta.VentaTrans;

public class VentaDaoImp implements VentaDao {

	
	/*
	public static void main(String[] args) {
		
		Transaccion t =GestorTransacciones.getInstancia().nuevaTransaccion();
		t.start();
		VentaTrans v= new VentaTrans("1991-11-12",10,1);
		VentaDaoImp ve = new VentaDaoImp();
		int id=ve.crearVenta(v);
		t.commit();
		
		VentaTrans p=ve.buscarVentaPorId(id);
		ve.borrarVenta(p.getId());
		t.commit();
	}
	
	*/
	
	/**
	 * transforma string en java.sql.Date
	 * @param fecha
	 * @return
	 */
	private Date stringToSQLDate(String fecha)
	{
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-DD");
		java.util.Date date=null;
		try {
			date = formatter.parse(fecha);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return new Date(date.getTime());
	}
	public int crearVenta(VentaTrans venta) {
		

		Connection conexion=(Connection) GestorTransacciones.getInstancia().getTransaccion().getResource();
		try {
		java.sql.PreparedStatement ps=conexion.prepareStatement("INSERT INTO `venta`( `fecha`, `total`, `cliente`) VALUES (?,?,?)",Statement.RETURN_GENERATED_KEYS);
			
		ps.setDate(1,stringToSQLDate(venta.getFecha()));
		ps.setDouble(2, venta.getTotal());
		ps.setInt(3, venta.getIdCliente());
			
		ps.executeUpdate();
		
		ResultSet rs= ps.getGeneratedKeys();
		rs.next();
		int id = rs.getInt(1);
		ps.close();
		
		return id;
		
		} catch (SQLException e) {
			return -1;
		}
		
	}


	public VentaTrans buscarVentaPorId(int id) {
		Connection conexion=(Connection) GestorTransacciones.getInstancia().getTransaccion().getResource();
		try {
			java.sql.PreparedStatement ps=conexion.prepareStatement("SELECT * from `venta` where `venta`.`id`="+id);
			ResultSet rs=ps.executeQuery();
			
			if(rs.next()) {
			VentaTrans v= new VentaTrans(rs.getInt("id"),rs.getDate("fecha").toString(),rs.getDouble("total"),rs.getInt("cliente"));
			rs.close();
			return v;
			}
			return null;
		} catch (SQLException e) {
			
			return null;
		}
	}

	
	public void borrarVenta(int id) {
		Connection conexion=(Connection) GestorTransacciones.getInstancia().getTransaccion().getResource();
		try {
		java.sql.PreparedStatement ps=conexion.prepareStatement("DELETE FROM `venta` WHERE `venta`.`id` = "+id);
			ps.executeUpdate();
			ps.close();
			
		} catch (SQLException e) {
			
		}
		
	}


	public void modificarVenta(VentaTrans id) {
		// begin-user-code
		// TODO Apéndice de método generado automáticamente

		// end-user-code
	}


	public ArrayList<VentaTrans> listarVentas() {
		// begin-user-code
		// TODO Apéndice de método generado automáticamente
		return null;
		// end-user-code
	}
}